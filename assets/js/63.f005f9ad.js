(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{462:function(t,e,a){"use strict";a.r(e);var r=a(56),l=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_03-13-반복문"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-13-반복문"}},[t._v("#")]),t._v(" 03-13. 반복문")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_1-반복문을-파이프라인으로-바꾸기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-반복문을-파이프라인으로-바꾸기"}},[t._v("#")]),t._v(" (1) 반복문을 파이프라인으로 바꾸기")]),t._v(" "),a("ul",[a("li",[t._v("컬렉션 파이프라인을 이용하여 기존에 사용했던 반복문을 일련의 연산으로 간단하게 표현할 수 있다.\n"),a("ul",[a("li",[a("code",[t._v("map")]),t._v(" : 입력 컬렉션의 각 원소를 반환")]),t._v(" "),a("li",[a("code",[t._v("filter")]),t._v(" : 또 다른 함수를 사용해 입력 컬렉션을 필터링해 부분집합을 만듬")])])]),t._v(" "),a("li",[t._v("논리를 파이프라인으로 표현하면 이해하기 훨씬 쉬워진다.\n"),a("ul",[a("li",[t._v("객체가 파이프라인을 따라 흐르며 어떻게 처리되는지를 읽을 수 있기 때문이다.")])])])])])}),[],!1,null,null,null);e.default=l.exports}}]);