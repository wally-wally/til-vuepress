(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{445:function(t,s,a){"use strict";a.r(s);var n=a(56),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"chapter15-let-const-키워드와-블록-레벨-스코프"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chapter15-let-const-키워드와-블록-레벨-스코프"}},[t._v("#")]),t._v(" Chapter15. let, const 키워드와 블록 레벨 스코프")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_1-var-키워드로-선언한-변수의-문제점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-var-키워드로-선언한-변수의-문제점"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("var")]),t._v(" 키워드로 선언한 변수의 문제점")]),t._v(" "),a("h3",{attrs:{id:"_1-변수-중복-선언-허용"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-변수-중복-선언-허용"}},[t._v("#")]),t._v(" (1) 변수 중복 선언 허용")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("var")]),t._v(" 키워드로 선언한 변수를 중복 선언하면 초기화문(변수 선언과 동시에 초기값을 할당하는 문) 유무에 따라 다르게 동작한다.")]),t._v(" "),a("li",[t._v("초기화문이 있는 변수 선언문은 자바스크립트 엔진에 의해 "),a("code",[t._v("var")]),t._v(" 키워드가 없는 것처럼 동작하고 초기화문이 없는 변수 선언문은 무시된다. 이때 에러는 발생하지 않는다.")]),t._v(" "),a("li",[t._v("이와 같이 동일한 이름의 변수가 이미 선언되어 있는 것을 모르고 변수를 중복 선언하면서 값까지 할당했다면 의도치 않게 먼저 선언된 변수 값이 변경되는 부작용이 발생한다.")])]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"_2-함수-레벨-스코프"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-함수-레벨-스코프"}},[t._v("#")]),t._v(" (2) 함수 레벨 스코프")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("var")]),t._v(" 키워드로 선언한 변수는 오로지 함수의 코드 블록만을 지역 스코프로 인정한다.\n"),a("ul",[a("li",[t._v("따라서 함수 외부에서 "),a("code",[t._v("var")]),t._v(" 키워드로 선언한 변수는 코드 블록 내에서 선언해도 모두 전역 변수가 된다.")])])]),t._v(" "),a("li",[t._v("함수 레벨 스코프는 전역 변수를 남발할 가능성을 높이고 이로 인해 아래 예시와 같이 의도치 않은 부작용을 발생하게 된다.")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x는 전역 변수다. 이미 선언된 전역 변수 x가 있으므로 x 변수는 중복 선언된다.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 의도치 않게 변수값이 변경되는 부작용 발생")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0 1 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 의도치 않게 변수값이 변경되는 부작용 발생")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])])]),a("br"),t._v(" "),a("h3",{attrs:{id:"_3-변수-호이스팅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-변수-호이스팅"}},[t._v("#")]),t._v(" (3) 변수 호이스팅")]),t._v(" "),a("ul",[a("li",[t._v("변수 호이스팅에 의해 "),a("code",[t._v("var")]),t._v(" 키워드로 선언한 변수는 변수 선언문 이전에 참조할 수 있다.")]),t._v(" "),a("li",[t._v("에러는 발생시키지 않지만 프로그램의 흐름상 맞지 않을뿐더러 가독성을 떨어뜨리고 오류를 발생시킬 여지를 남긴다.")])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_2-let-키워드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-let-키워드"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("let")]),t._v(" 키워드")]),t._v(" "),a("h3",{attrs:{id:"_1-변수-중복-선언-금지"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-변수-중복-선언-금지"}},[t._v("#")]),t._v(" (1) 변수 중복 선언 금지")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("let")]),t._v(" 키워드로 이름이 같은 변수를 중복 선언하면 "),a("code",[t._v("var")]),t._v(" 키워드와 달리 문법 에러("),a("code",[t._v("SyntaxError")]),t._v(")가 발생한다.")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SyntaxError: Identifier 'a' has already been declared")]),t._v("\n")])])]),a("br"),t._v(" "),a("h3",{attrs:{id:"_2-블록-레벨-스코프"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-블록-레벨-스코프"}},[t._v("#")]),t._v(" (2) 블록 레벨 스코프")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("let")]),t._v(" 키워드로 선언된 변수는 블록 레벨 스코프를 따른다.\n"),a("ul",[a("li",[t._v("따라서 전역에서 선언된 변수와 코드 블록 내에서 선언된 변수명이 같아도 서로 다른 별개의 변수다.")])])])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 전역 변수")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 지역 변수")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 지역 변수")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: bar is not defined")]),t._v("\n")])])]),a("br"),t._v(" "),a("h3",{attrs:{id:"_3-변수-호이스팅-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-변수-호이스팅-2"}},[t._v("#")]),t._v(" (3) 변수 호이스팅")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("var")]),t._v(" 키워드로 선언한 변수는 런타임 이전에 선언 단계와 초기화 단계가 실행된다.\n"),a("ul",[a("li",[t._v("따라서 변수 선언문 이전에 변수를 참조할 수 있다.")])])]),t._v(" "),a("li",[a("code",[t._v("let")]),t._v(" 키워드로 선언한 변수는 '선언 단계'와 '초기화 단계'가 분리되어 진행된다.\n"),a("ul",[a("li",[t._v("즉, 런타임 이전에 자바스크립트 엔진에 의해 암묵적으로 선언 단계가 먼저 실행되지만 초기화 단계는 변수 선언문에 도달했을 때 실행된다.")]),t._v(" "),a("li",[t._v("만약 초기화 단계가 실행되기 이전에 변수에 접근하려고 하면 참조 에러(ReferenceError)가 발생한다.")])])]),t._v(" "),a("li",[a("code",[t._v("let")]),t._v(" 키워드로 선언한 변수는 스코프의 시작 지점부터 초기화 단계 시작 지점(변수 선언문)까지 변수를 참조할 수 없다.\n"),a("ul",[a("li",[t._v("스코프의 시작 지점부터 초기화 시작 지점까지의 변수를 참조할 수 없는 구간을 "),a("b",[t._v("일시적 사각지대(Temporal Dead Zone: TDZ)")]),t._v("라고 부른다.")])])])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: a is not defined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 변수 선언문에서 초기화 단계가 실행")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 할당문에서 할당 단계가 실행")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),a("br"),t._v(" "),a("h3",{attrs:{id:"_4-전역-객체와-let"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-전역-객체와-let"}},[t._v("#")]),t._v(" (4) 전역 객체와 "),a("code",[t._v("let")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("var")]),t._v(" 키워드로 선언한 전역 변수와 전역 함수, 그리고 선언하지 않은 변수에 값을 할당한 암묵적 전역은 전역 객체 "),a("code",[t._v("window")]),t._v("의 프로퍼티가 된다.")]),t._v(" "),a("li",[a("code",[t._v("let")]),t._v(" 키워드로 선언한 전역 변수는 전역 객체의 프로퍼티가 아니다.\n"),a("ul",[a("li",[t._v("즉, "),a("code",[t._v("window.foo")]),t._v(" 와 같이 접근할 수 없다.")])])]),t._v(" "),a("li",[a("code",[t._v("let")]),t._v(" 전역 변수는 보이지 않는 개념적인 블록(전역 렉시컬 환경의 선언전 환경 레코드) 내에 존재하게 되는데 이 부분은 추후 다시 살펴보도록 하자.")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("br"),t._v(" "),a("h2",{attrs:{id:"_3-const-키워드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-const-키워드"}},[t._v("#")]),t._v(" 3. "),a("code",[t._v("const")]),t._v(" 키워드")]),t._v(" "),a("h3",{attrs:{id:"_1-선언과-초기화"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-선언과-초기화"}},[t._v("#")]),t._v(" (1) 선언과 초기화")]),t._v(" "),a("ul",[a("li",[a("b",[a("code",[t._v("const")]),t._v(" 키워드로 선언한 변수는 반드시 선언과 동시에 초기화해야 한다.")])]),t._v(" "),a("li",[t._v("그렇지 않으면 문법 에러가 발생한다.")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SyntaxError: Missing initializer in const declaration")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("const")]),t._v(" 키워드로 선언한 변수는 "),a("code",[t._v("let")]),t._v(" 키워드로 선언한 변수와 마찬가지로 블록 레벨 스코프를 가지며, 변수 호이스팅이 발생하지 않는 것처럼 동작한다.")])]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"_2-재할당-금지"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-재할당-금지"}},[t._v("#")]),t._v(" (2) 재할당 금지")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("var")]),t._v(" 또는 "),a("code",[t._v("let")]),t._v(" 키워드로 선언한 변수는 재할당이 자유로우나 "),a("b",[a("code",[t._v("const")]),t._v(" 키워드로 선언한 변수는 재할당이 금지된다.")])])]),t._v(" "),a("br"),t._v(" "),a("h3",{attrs:{id:"_3-상수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-상수"}},[t._v("#")]),t._v(" (3) 상수")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("const")]),t._v(" 키워드로 선언한 변수에 원시 값을 할당한 경우 변수 값을 변경할 수 없다.")]),t._v(" "),a("li",[t._v("이러한 특징을 이용해 "),a("code",[t._v("const")]),t._v(" 키워드를 상수를 표현하는 데 사용하기도 한다.")]),t._v(" "),a("li",[a("b",[a("code",[t._v("const")]),t._v(" 키워드로 선언된 변수에 원시 값을 할당한 경우 원시 값은 변경할 수 없는 값(immutable value)이고 "),a("code",[t._v("const")]),t._v(" 키워드에 의해 재할당이 금지되므로 할당된 값을 변경할 수 있는 방법은 없다.")])]),t._v(" "),a("li",[t._v("상수는 상태 유지와 가독성, 유지보수의 편의를 위해 적극적으로 사용해야 한다.")]),t._v(" "),a("li",[t._v("일반적으로 상수의 이름은 대문자로만 구성된 스네이크 케이스("),a("code",[t._v("SNAKE_CASE")]),t._v(") 방식이 일반적이다.")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TAX_RATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 세전 가격")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" preTaxPrice "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 세후 가격")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" afterTaxPrice "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" preTaxPrice "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("preTaxPrice "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TAX_RATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("afterTaxPrice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 110")]),t._v("\n")])])]),a("br"),t._v(" "),a("h3",{attrs:{id:"_4-const-키워드와-객체"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-const-키워드와-객체"}},[t._v("#")]),t._v(" (4) "),a("code",[t._v("const")]),t._v(" 키워드와 객체")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("const")]),t._v(" 키워드로 선언된 변수에 원시 값을 할당한 경우 값을 변경할 수 없다.")]),t._v(" "),a("li",[t._v("하지만 "),a("b",[a("code",[t._v("const")]),t._v(" 키워드로 선언된 변수에 객체를 할당한 경우 값을 변경할 수 있다.")])]),t._v(" "),a("li",[t._v("변경 불가능한 값인 원시 값은 재할당 없이 변경(교체)할 수 있는 방법이 없지만 변경 가능한 값인 객체는 재할당 없이도 직접 변경이 가능하기 때문이다.")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wally'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nperson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wally-wally'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {name: 'wally-wally'}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("const")]),t._v(' 키워드는 재할당을 금지할 뿐 "불변"을 의미하지는 않는다.\n'),a("ul",[a("li",[t._v("즉, 새로운 값을 재할당하는 것은 불가능하지만 프로퍼티 동적 생성, 삭제, 프로퍼티의 값의 변경을 통해 객체를 변경하는 것은 가능하다.")]),t._v(" "),a("li",[t._v("이때 객체가 변경되더라도 변수에 할당된 참조 값은 변경되지 않는다.")])])])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_4-var-vs-let-vs-const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-var-vs-let-vs-const"}},[t._v("#")]),t._v(" 4. "),a("code",[t._v("var")]),t._v(" vs "),a("code",[t._v("let")]),t._v(" vs "),a("code",[t._v("const")])]),t._v(" "),a("ul",[a("li",[t._v("변수 선언에는 기본적으로 "),a("code",[t._v("const")]),t._v("를 사용하고 "),a("code",[t._v("let")]),t._v("은 재할당이 필요한 경우에 한정해 사용하는 것이 좋다.")]),t._v(" "),a("li",[a("code",[t._v("const")]),t._v(" 키워드를 사용하면 의도치 않은 재할당을 방지하기 때문에 좀 더 안전하다.")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("키워드")]),t._v(" "),a("th",[t._v("할당")]),t._v(" "),a("th",[t._v("선언")]),t._v(" "),a("th",[t._v("스코프")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("var")])]),t._v(" "),a("td",[t._v("자유")]),t._v(" "),a("td",[t._v("자유")]),t._v(" "),a("td",[t._v("함수 레벨 스코프")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("let")])]),t._v(" "),a("td",[t._v("자유")]),t._v(" "),a("td",[t._v("한 번만")]),t._v(" "),a("td",[t._v("블록 레벨 스코프")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("const")])]),t._v(" "),a("td",[t._v("한 번만")]),t._v(" "),a("td",[t._v("한 번만")]),t._v(" "),a("td",[t._v("블록 레벨 스코프")])])])]),t._v(" "),a("ul",[a("li",[t._v("ES6를 사용한다면 "),a("code",[t._v("var")]),t._v(" 키워드는 사용하지 않는다.")]),t._v(" "),a("li",[t._v("재할당이 필요한 경우에 한정해 "),a("code",[t._v("let")]),t._v(" 키워드를 사용한다.\n"),a("ul",[a("li",[t._v("이때 변수의 스코프는 최대한 좁게 만든다.")])])]),t._v(" "),a("li",[t._v("변경이 발생하지 않고 읽기 전용으로 사용하는(재할당이 필요 없는 상수) 원시 값과 객체에는 "),a("code",[t._v("const")]),t._v(" 키워드를 사용한다.\n"),a("ul",[a("li",[a("code",[t._v("const")]),t._v(" 키워드는 재할당을 금지하므로 "),a("code",[t._v("var")]),t._v(", "),a("code",[t._v("let")]),t._v(" 키워드보다 안전한다.")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);